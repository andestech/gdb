# Copyright 2009-2022 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


set test p_variable
set srcfile ${test}.c
if { [prepare_for_testing "failed to prepare" ${test} ${srcfile}] } {
    return -1
}

if ![runto_main] {
    return -1
}

set breakline [gdb_get_line_number "break-at-exit"]
gdb_test "break ${srcfile}:${breakline}" \
	 "Breakpoint \[0-9\]+ at 0x\[0-9a-f\]+: file .*${srcfile}, line ${breakline}\\." \
	 "break"

gdb_test "continue" \
	 "Continuing\\.\[ \r\n\]+Breakpoint \[0-9\]+, .*break-at-exit.*" \
	 "continue to break-at-exit after break"


proc test_p_variable_all {reg_name} {
    global variable_value
    gdb_test "p lala_${reg_name}" \
      ".* = ${variable_value}" \
      "p lala_${reg_name}"
}

# the 1st variable lala_a0 asm("a0") = 0x0A;
set variable_value [expr 0x0A]
foreach_with_prefix reg_name {"a0" "a1" "a2" "a3" "a4" "a5" "a6" "a7"} {
	test_p_variable_all ${reg_name}
	set variable_value [expr $variable_value + 1]
}
foreach_with_prefix reg_name {"s2" "s3" "s4" "s5" "s6" "s7" "s8" "s9" "s10" "s11"} {
	test_p_variable_all ${reg_name}
	set variable_value [expr $variable_value + 1]
}
foreach_with_prefix reg_name {"t3" "t4" "t5" "t6"} {
	test_p_variable_all ${reg_name}
	set variable_value [expr $variable_value + 1]
}

#gdb_test "p lala_t5" \
#	 ".* = 17" \
#	 "p lala_t5"
	 
#set breakline [gdb_get_line_number "break-at-exit"]

#gdb_test "b ${srcfile}:24" \
#	 "" \
#	 "b p_variable.c:24"

#gdb_test "continue" \
#	 "Continuing\\.\[ \r\n\]+Breakpoint \[0-9\]+, .*" \
#	 "continue to break p_variable.c:24"
	 
#gdb_test "hbreak ${srcfile}:${breakline}" \
#	 "Hardware assisted breakpoint \[0-9\]+ at 0x\[0-9a-f\]+: file .*${srcfile}, line ${breakline}\\." \
#	 "hbreak"

#gdb_test "continue" \
#	 "Continuing\\.\[ \r\n\]+Breakpoint \[0-9\]+, .*break-at-exit.*" \
#	 "continue to break-at-exit after hbreak"
